generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  name           String?
  imageUrl       String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  clerkUserId    String   @unique
  assignedIssues Issue[]  @relation("Assignee")
  createdIssues  Issue[]  @relation("Reporter")
}

model Project {
  id             String   @id @default(cuid())
  name           String
  key            String
  description    String?
  organizationId String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  issues         Issue[]
  sprints        Sprint[]

  @@unique([organizationId, key])
}

model Sprint {
  id        String       @id @default(cuid())
  name      String       @unique
  startDate DateTime
  endDate   DateTime
  status    SprintStatus @default(PLANNED)
  projectId String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  issues    Issue[]
  project   Project      @relation(fields: [projectId], references: [id], onDelete: Cascade)
  goal      String
}

model Issue {
  id                      String     @id @default(cuid())
  title                   String
  description             String?
  status                  IssueStatus
  order                   Int        // This will store the order within its status column
  priority                IssuePriority
  assignee                User?      @relation("Assignee", fields: [assigneeId], references: [id])
  assigneeId              String?
  reporter                User       @relation("Reporter", fields: [reporterId], references: [id])
  reporterId              String
  project                 Project    @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId               String
  sprint                  Sprint?    @relation(fields: [sprintId], references: [id], onDelete: SetNull)
  sprintId                String?
  createdAt               DateTime   @default(now())
  updatedAt               DateTime   @updatedAt
  sustainabilityDimensions SustainabilityDimension[] @default([]) // Ensure it's marked as an array and has a default value
  storyPoints             Int?
  sustainabilityPoints    Int?
  acceptanceCriteria      String?
  sustainabilityCriteria  String?

  @@index([status, order])
}

enum SprintStatus {
  PLANNED
  ACTIVE
  COMPLETED
}

enum IssueStatus {
  TODO
  IN_PROGRESS
  IN_REVIEW
  DONE
}

enum IssuePriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum SustainabilityDimension {
  INDIVIDUAL
  ENVIRONMENTAL
  SOCIAL
  ECONOMIC
  TECHNICAL
}
